{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport global from \"../../Global/Style\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      recupSenha = _useState2[0],\n      setRecupSenha = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      senha = _useState6[0],\n      setSenha = _useState6[1];\n\n  var recuperarSenha = function recuperarSenha() {\n    setRecupSenha(true);\n  };\n\n  useEffect(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('userdata'));\n\n          case 2:\n            _context.t0 = _context.sent;\n\n            if (!(_context.t0 !== null)) {\n              _context.next = 5;\n              break;\n            }\n\n            navigation.navigate(\"ContainerHome\");\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n\n  var autenticar = function autenticar() {\n    var funcionario = {\n      email: email,\n      senha: senha\n    };\n    fetch(\"http://192.168.0.103:3000/funcionarios\", {\n      \"method\": \"POST\",\n      \"headers\": {\n        \"Content-Type\": \"application/json\"\n      },\n      \"body\": JSON.stringify(funcionario)\n    }).then(function (resp) {\n      return resp.json();\n    }).then(function _callee2(data) {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(data.id_funcionario !== undefined)) {\n                _context2.next = 6;\n                break;\n              }\n\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('userdata', JSON.stringify(data)));\n\n            case 3:\n              navigation.navigate('ContainerHome');\n              _context2.next = 7;\n              break;\n\n            case 6:\n              ToastAndroid.show('Email ou Senha Invalidos', ToastAndroid.SHORT);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  return _jsxs(View, {\n    style: global.body,\n    children: [_jsx(StatusBar, {\n      barStyle: \"dark-content\",\n      hidden: true,\n      backgroundColor: \"transparent\",\n      translucent: true\n    }), recupSenha ? _jsxs(View, {\n      style: css.screen2,\n      children: [_jsx(Ionicons, {\n        name: \"arrow-back-circle-outline\",\n        style: css.icon,\n        size: 35,\n        color: \"white\",\n        onPress: function onPress() {\n          return setRecupSenha(false);\n        }\n      }), _jsx(Text, {\n        style: css.title2,\n        children: \"Recuperar senha\"\n      }), _jsxs(View, {\n        style: css.inputs,\n        children: [_jsx(TextInput, {\n          placeholder: \"Matr√≠cula...\",\n          placeholderTextColor: \"white\",\n          style: css.input2\n        }), _jsx(TextInput, {\n          placeholder: \"Nova senha...\",\n          placeholderTextColor: \"white\",\n          style: css.input2\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: global.cardButton2,\n        onPress: function onPress() {\n          setRecupSenha(false);\n        },\n        children: _jsx(Text, {\n          style: global.buttonText2,\n          children: \"SALVAR\"\n        })\n      })]\n    }) : _jsxs(View, {\n      style: css.screen1,\n      children: [_jsxs(View, {\n        style: css.cardTitle,\n        children: [_jsx(Text, {\n          style: css.textTitle,\n          children: \"CASA ACOLHEDORA\"\n        }), _jsx(Text, {\n          style: css.textTitle,\n          children: \"IRM\\xC3 ANT\\xD4NIA\"\n        })]\n      }), _jsx(Text, {\n        style: css.title1,\n        children: \"LOGIN\"\n      }), _jsx(TextInput, {\n        placeholder: \"E-mail\",\n        value: email,\n        onChangeText: setEmail,\n        style: css.input1\n      }), _jsx(TextInput, {\n        secureTextEntry: true,\n        placeholder: \"Senha\",\n        value: senha,\n        onChangeText: setSenha,\n        style: css.input1\n      }), _jsx(Text, {\n        style: css.button,\n        onPress: function onPress() {\n          recuperarSenha();\n        },\n        children: \"Esqueci a senha\"\n      }), _jsx(TouchableOpacity, {\n        style: global.cardButton1,\n        onPress: function onPress() {\n          return autenticar();\n        },\n        children: _jsx(Text, {\n          style: global.buttonText1,\n          children: \"ENTRAR\"\n        })\n      })]\n    })]\n  });\n}\nvar css = StyleSheet.create({\n  cardTitle: {\n    backgroundColor: \"#166B8A\",\n    width: \"90%\",\n    height: \"20%\",\n    alignSelf: \"flex-end\",\n    borderBottomLeftRadius: 66,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  textTitle: {\n    color: \"white\",\n    fontSize: 18\n  },\n  title1: {\n    color: \"black\",\n    fontWeight: 'bold',\n    fontSize: 24,\n    marginTop: \"10%\",\n    marginBottom: \"10%\"\n  },\n  title2: {\n    color: \"white\",\n    fontWeight: 'bold',\n    fontSize: 24\n  },\n  screen1: {\n    width: \"100%\",\n    height: \"100%\",\n    alignItems: 'center'\n  },\n  screen2: {\n    width: \"100%\",\n    height: \"100%\",\n    alignItems: 'center',\n    backgroundColor: \"rgb(22,107,138)\"\n  },\n  input1: {\n    width: \"80%\",\n    borderBottomWidth: 1,\n    borderBottomColor: 'black',\n    padding: \"2%\",\n    marginBottom: \"10%\"\n  },\n  input2: {\n    width: \"80%\",\n    borderBottomWidth: 1,\n    borderBottomColor: 'white',\n    padding: \"2%\",\n    marginTop: \"15%\"\n  },\n  button: {\n    color: \"rgb(22,107,138)\",\n    fontWeight: \"bold\",\n    fontSize: 14,\n    marginRight: -190,\n    marginTop: -10,\n    marginBottom: \"30%\"\n  },\n  icon: {\n    alignSelf: \"flex-start\",\n    marginTop: \"10%\",\n    marginLeft: 15\n  },\n  inputs: {\n    width: \"100%\",\n    alignItems: 'center',\n    marginTop: \"15%\"\n  }\n});","map":{"version":3,"sources":["C:/Users/jaque/Desktop/SENAI/ONG/Mobile/pages/Geral/Login/Index.js"],"names":["React","useState","useEffect","global","AsyncStorage","Ionicons","Login","navigation","recupSenha","setRecupSenha","email","setEmail","senha","setSenha","recuperarSenha","getItem","navigate","autenticar","funcionario","fetch","JSON","stringify","then","resp","json","data","id_funcionario","undefined","setItem","ToastAndroid","show","SHORT","catch","err","console","log","body","css","screen2","icon","title2","inputs","input2","cardButton2","buttonText2","screen1","cardTitle","textTitle","title1","input1","button","cardButton1","buttonText1","StyleSheet","create","backgroundColor","width","height","alignSelf","borderBottomLeftRadius","alignItems","justifyContent","color","fontSize","fontWeight","marginTop","marginBottom","borderBottomWidth","borderBottomColor","padding","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\r\nimport { StyleSheet, Text, View, TextInput, ToastAndroid, TouchableOpacity, StatusBar} from 'react-native';\r\n\r\nimport global from \"../../Global/Style\"\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nexport default function Login({navigation}) {\r\n  const [recupSenha, setRecupSenha] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [senha, setSenha] = useState(\"\");\r\n\r\n  const recuperarSenha = () => {\r\n    setRecupSenha(true);\r\n  }\r\n\r\n  useEffect(async() => {\r\n    if(await AsyncStorage.getItem('userdata') !== null) {\r\n      navigation.navigate(\"ContainerHome\");\r\n    }\r\n  }, [])\r\n\r\n  const autenticar = () => {\r\n    let funcionario = {\r\n      email: email,\r\n      senha: senha\r\n    }\r\n\r\n    // fetch(`http://10.87.207.27:3000/funcionarios`, {\r\n      fetch(`http://192.168.0.103:3000/funcionarios`, {\r\n      \"method\": \"POST\",\r\n      \"headers\": {\r\n          \"Content-Type\": \"application/json\"\r\n      },\r\n      \"body\": JSON.stringify(funcionario),\r\n    })\r\n    .then(resp => {return resp.json()})\r\n    .then(async data => {\r\n      if(data.id_funcionario !== undefined) {\r\n        await AsyncStorage.setItem('userdata', JSON.stringify(data));\r\n        navigation.navigate('ContainerHome');\r\n      }else {\r\n          ToastAndroid.show('Email ou Senha Invalidos', ToastAndroid.SHORT);\r\n      }\r\n    })\r\n    .catch(err => { console.log(err) });\r\n  }\r\n\r\n  return (\r\n    <View style={global.body}>\r\n      <StatusBar\r\n            barStyle = \"dark-content\"\r\n            hidden = {true}\r\n            backgroundColor=\"transparent\"\r\n            translucent={true}\r\n        />\r\n      {\r\n        (recupSenha) ?\r\n          <View style={css.screen2}>\r\n            <Ionicons name=\"arrow-back-circle-outline\" style={css.icon} size={35} color=\"white\" onPress={() => setRecupSenha(false)} />\r\n            <Text style={css.title2}>Recuperar senha</Text>\r\n            <View style={css.inputs}>\r\n              <TextInput placeholder={\"Matr√≠cula...\"} placeholderTextColor={\"white\"} style={css.input2}></TextInput>\r\n              <TextInput placeholder={\"Nova senha...\"} placeholderTextColor={\"white\"} style={css.input2}></TextInput>\r\n            </View>\r\n            <TouchableOpacity style={global.cardButton2} onPress={() => { setRecupSenha(false)}}>\r\n              <Text style={global.buttonText2}>SALVAR</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n          :\r\n          <View style={css.screen1}>\r\n            <View style={css.cardTitle}>\r\n                    <Text style={css.textTitle}>CASA ACOLHEDORA</Text>\r\n                    <Text style={css.textTitle}>IRM√É ANT√îNIA</Text>\r\n            </View>\r\n            <Text style={css.title1}>LOGIN</Text>\r\n            <TextInput placeholder=\"E-mail\" value={email} onChangeText={setEmail} style={css.input1}/>\r\n            <TextInput secureTextEntry={true} placeholder=\"Senha\" value={senha} onChangeText={setSenha} style={css.input1}/>\r\n            <Text style={css.button} onPress={() => {recuperarSenha()}}>Esqueci a senha</Text>\r\n            <TouchableOpacity style={global.cardButton1} onPress={() => autenticar()}>\r\n              <Text style={global.buttonText1}>ENTRAR</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n      }\r\n    </View>\r\n  );\r\n}\r\n\r\nconst css = StyleSheet.create({\r\n  cardTitle: {\r\n      backgroundColor: \"#166B8A\",\r\n      width: \"90%\",\r\n      height: \"20%\",\r\n      alignSelf: \"flex-end\",\r\n      borderBottomLeftRadius: 66,\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n  },\r\n  textTitle: {\r\n      color: \"white\",\r\n      fontSize: 18\r\n  },\r\n  title1: {\r\n      color: \"black\",\r\n      fontWeight: 'bold',\r\n      fontSize: 24,\r\n      marginTop: \"10%\",\r\n      marginBottom: \"10%\"\r\n  },\r\n  title2: {\r\n      color: \"white\",\r\n      fontWeight: 'bold',\r\n      fontSize: 24,\r\n  },\r\n  screen1:{\r\n      width: \"100%\",\r\n      height:\"100%\",\r\n      alignItems: 'center'\r\n  },\r\n  screen2:{\r\n      width: \"100%\",\r\n      height:\"100%\",\r\n      alignItems: 'center',\r\n      backgroundColor: \"rgb(22,107,138)\"\r\n  },\r\n  input1:{\r\n      width: \"80%\",\r\n      borderBottomWidth: 1,\r\n      borderBottomColor: 'black',\r\n      padding: \"2%\",\r\n      marginBottom: \"10%\"\r\n  },\r\n  input2:{\r\n      width: \"80%\",\r\n      borderBottomWidth: 1,\r\n      borderBottomColor: 'white',\r\n      padding: \"2%\",\r\n      marginTop: \"15%\"\r\n  },\r\n  button:{\r\n      color:\"rgb(22,107,138)\",\r\n      fontWeight: \"bold\",\r\n      fontSize: 14,\r\n      marginRight: -190,\r\n      marginTop: -10,\r\n      marginBottom: \"30%\"\r\n  },\r\n  icon:{\r\n      alignSelf: \"flex-start\",\r\n      marginTop: \"10%\",\r\n      marginLeft: 15\r\n  },\r\n  inputs:{\r\n      width: \"100%\",\r\n      alignItems: 'center',\r\n      marginTop: \"15%\"\r\n  }\r\n})"]},"metadata":{},"sourceType":"module"}