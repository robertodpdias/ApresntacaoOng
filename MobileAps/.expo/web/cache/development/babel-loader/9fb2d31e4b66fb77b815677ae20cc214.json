{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport global from \"../../Global/Style\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { MaterialCommunityIcons, Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ListarFuncionario(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      lista = _useState2[0],\n      setLista = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchText = _useState4[0],\n      setSearchText = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dados = _useState6[0],\n      setDados = _useState6[1];\n\n  var Listar = function Listar() {\n    fetch(\"http://192.168.0.103:3000/funcionarios\").then(function (resp) {\n      return resp.json();\n    }).then(function (data) {\n      setLista(data);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  useEffect(function () {\n    Listar();\n  }, []);\n  useEffect(function () {\n    if (searchText === '') {\n      setLista(dados);\n    } else {\n      console.log(\"teste\");\n      setLista(dados.filter(function (item) {\n        return item.nome_completo.toLowerCase().indexOf(searchText.toLowerCase()) > -1;\n      }));\n    }\n  }, [searchText]);\n  return _jsxs(View, {\n    style: global.bodyAlternative,\n    children: [_jsx(StatusBar, {\n      barStyle: \"dark-content\",\n      hidden: false,\n      backgroundColor: \"transparent\",\n      translucent: true\n    }), _jsxs(View, {\n      style: global.filter,\n      children: [_jsx(Ionicons, {\n        name: \"arrow-back-circle-outline\",\n        size: 34,\n        color: \"white\",\n        onPress: function onPress() {\n          navigation.navigate(\"Funcionario\");\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Pesquise uma pessoa\",\n        placeholderTextColor: \"gray\",\n        style: global.search,\n        value: searchText,\n        onChangeText: function onChangeText(t) {\n          return setSearchText(t);\n        }\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          ordenar();\n        },\n        children: _jsx(MaterialCommunityIcons, {\n          name: \"order-alphabetical-ascending\",\n          size: 24,\n          color: \"white\"\n        })\n      })]\n    }), _jsx(View, {\n      style: global.scrollAlternative,\n      children: _jsx(ScrollView, {\n        children: lista.map(function (item, index) {\n          return _jsxs(TouchableOpacity, {\n            style: global.cardInfo,\n            onPress: function onPress() {\n              navigation.navigate(\"VerFuncionario\", {\n                item: item\n              });\n            },\n            children: [_jsx(Image, {\n              source: item.foto_antes === null || item.foto_antes === \"\" ? require(\"../../assets/user.png\") : {\n                uri: item.foto_antes\n              },\n              style: global.imageUser\n            }), _jsxs(View, {\n              style: global.cardTxt,\n              children: [_jsx(Text, {\n                style: global.textInfoAlternative,\n                children: item.nome_completo\n              }), _jsx(Text, {\n                style: css.activity,\n                children: item.status === 0 ? \"Inativo\" : \"Ativo\"\n              })]\n            })]\n          }, index);\n        })\n      })\n    })]\n  });\n}\nvar css = StyleSheet.create({\n  activity: {\n    fontSize: 18,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["C:/Users/jaque/Desktop/SENAI/ONG/Mobile/pages/Funcionarios/ListarFuncionarios/Index.js"],"names":["React","useState","useEffect","global","AsyncStorage","MaterialCommunityIcons","Ionicons","ListarFuncionario","navigation","lista","setLista","searchText","setSearchText","dados","setDados","Listar","fetch","then","resp","json","data","catch","err","console","log","filter","item","nome_completo","toLowerCase","indexOf","bodyAlternative","navigate","search","t","ordenar","scrollAlternative","map","index","cardInfo","foto_antes","require","uri","imageUser","cardTxt","textInfoAlternative","css","activity","status","StyleSheet","create","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\r\nimport { StyleSheet, View, Text, Image, TouchableOpacity, ScrollView, TextInput, StatusBar } from 'react-native';\r\n\r\nimport global from \"../../Global/Style\"\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { MaterialCommunityIcons, Ionicons } from '@expo/vector-icons';\r\n\r\nexport default function ListarFuncionario({navigation}){\r\n    const[lista, setLista] = useState([]);\r\n    const[searchText, setSearchText] = useState(\"\");\r\n    const [dados, setDados] = useState([]);\r\n\r\n    const Listar = () => {\r\n        // fetch(`http://10.87.207.27:3000/funcionarios`)\r\n        fetch(`http://192.168.0.103:3000/funcionarios`)\r\n        .then(resp => {return resp.json()})\r\n        .then(data => {\r\n            setLista(data);\r\n        })\r\n        .catch(err => { console.log(err) });\r\n    }\r\n\r\n    useEffect(() => {\r\n        Listar();\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        if (searchText === ''){\r\n            setLista(dados);\r\n        } else {\r\n            console.log(\"teste\")\r\n            setLista(\r\n                dados.filter(item => (item.nome_completo.toLowerCase().indexOf(searchText.toLowerCase()) > -1))\r\n            )\r\n        }\r\n    }, [searchText]);\r\n\r\n    return(\r\n        <View style={global.bodyAlternative}>\r\n            <StatusBar\r\n                barStyle = \"dark-content\"\r\n                hidden = {false}\r\n                backgroundColor=\"transparent\"\r\n                translucent={true}/>\r\n            <View style={global.filter}>\r\n            <Ionicons name=\"arrow-back-circle-outline\" size={34} color=\"white\" onPress={() => {navigation.navigate(\"Funcionario\")}} />\r\n                <TextInput placeholder=\"Pesquise uma pessoa\" placeholderTextColor= \"gray\" style={global.search} value={searchText} onChangeText={(t) => setSearchText(t)}></TextInput>\r\n                <TouchableOpacity onPress={() => {ordenar()}}>\r\n                    <MaterialCommunityIcons name=\"order-alphabetical-ascending\" size={24} color=\"white\" />\r\n                </TouchableOpacity>\r\n            </View>\r\n            <View style={global.scrollAlternative}>\r\n                <ScrollView>\r\n                    {\r\n                        lista.map((item,index) => {\r\n                            return(\r\n                                <TouchableOpacity style={global.cardInfo} onPress={() => {navigation.navigate(\"VerFuncionario\", {item})}} key={index}>\r\n                                    <Image source={(item.foto_antes === null || item.foto_antes === \"\") ? require(\"../../assets/user.png\") : {uri: item.foto_antes}} style={global.imageUser}/>\r\n                                    <View style={global.cardTxt}>\r\n                                        <Text style={global.textInfoAlternative}>{item.nome_completo}</Text>\r\n                                        <Text style={css.activity}>{(item.status ===0) ? \"Inativo\" : \"Ativo\"}</Text>\r\n                                    </View>\r\n                                </TouchableOpacity> \r\n                            )\r\n                        })\r\n                    }\r\n                </ScrollView>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\nconst css = StyleSheet.create({\r\n    activity: {\r\n        fontSize: 18,\r\n        fontWeight: \"bold\"\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}